definitions:
  models.Cards:
    properties:
      extra:
        items:
          type: integer
        type: array
      main:
        items:
          type: integer
        type: array
      side:
        items:
          type: integer
        type: array
    type: object
  models.Decks:
    properties:
      cards:
        allOf:
        - $ref: '#/definitions/models.Cards'
        description: 卡组卡牌内容
      createdAt:
        description: 创建时间
        type: string
      id:
        description: 卡组id （这里数据库不采用主键自增，使用雪花算法产生不重复的64位主键。前端使用string传输避免精度丢失问题）
        example: "0"
        type: string
      lastUseAt:
        description: 最后使用时间 (这里还为做记录处理，待讨论)
        type: string
      name:
        description: 牌组名称
        type: string
      updatedAt:
        description: 更新时间
        type: string
      userId:
        description: 用户id
        type: integer
    type: object
  models.DecksNames:
    properties:
      id:
        example: "0"
        type: string
      name:
        type: string
    type: object
  models.Replay:
    properties:
      createdAt:
        description: 创建时间
        type: string
      id:
        description: 录像id（这里数据库不采用主键自增，使用雪花算法产生不重复的64位主键。前端使用string传输避免精度丢失问题）
        example: "0"
        type: string
      name:
        description: 录像名称
        type: string
      userId:
        description: 用户Id     (这里可能涉及一个对战玩家的信息，现在暂时未考虑)
        type: integer
    type: object
  resp.SuccessResp:
    properties:
      data: {}
      status:
        type: integer
    type: object
info:
  contact: {}
paths:
  /api/delDesksById:
    delete:
      consumes:
      - application/json
      description: 根据卡组id，删除卡组
      parameters:
      - description: id
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/resp.SuccessResp'
      summary: 删除卡组
      tags:
      - 卡组
  /api/getDesksById:
    get:
      consumes:
      - application/json
      description: 查询卡组id，获取卡组信息
      parameters:
      - description: id
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            allOf:
            - $ref: '#/definitions/resp.SuccessResp'
            - properties:
                data:
                  $ref: '#/definitions/models.Decks'
              type: object
      summary: 查询卡组
      tags:
      - 卡组
  /api/getDesksList:
    get:
      consumes:
      - application/json
      description: 查询用户的卡组列表
      parameters:
      - description: 用户id
        example: "888787"
        in: query
        name: userId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/resp.SuccessResp'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/models.DecksNames'
                  type: array
              type: object
      summary: 查询卡组列表
      tags:
      - 卡组
  /api/putDesks:
    post:
      consumes:
      - application/json
      description: 保存卡组，如果卡组Id没有则创建。有id则覆盖数据库这条记录
      parameters:
      - description: 卡组信息
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/models.Decks'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/resp.SuccessResp'
      summary: 保存卡组
      tags:
      - 卡组
  /api/replay/del:
    delete:
      consumes:
      - application/json
      description: 根据录像id，删除录像
      parameters:
      - description: id
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/resp.SuccessResp'
      summary: 删除录像
      tags:
      - 录像
  /api/replay/get:
    get:
      description: 通过录像id获取录像文件
      parameters:
      - description: 录像id
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/octet-stream
      responses: {}
      summary: 获取录像
      tags:
      - 录像
  /api/replay/list:
    get:
      consumes:
      - application/json
      description: 查询用户录像列表
      parameters:
      - description: userId
        in: query
        name: userId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/resp.SuccessResp'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/models.Replay'
                  type: array
              type: object
      summary: 查询录像列表
      tags:
      - 录像
  /api/replay/upload:
    post:
      consumes:
      - multipart/form-data
      description: 上传录像
      parameters:
      - description: file
        in: formData
        name: replay
        required: true
        type: file
      - description: 录像名
        in: formData
        name: name
        required: true
        type: string
      - description: 用戶id
        in: formData
        name: userId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/resp.SuccessResp'
      summary: 上传录像
      tags:
      - 录像
swagger: "2.0"
